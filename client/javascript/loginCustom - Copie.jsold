this.UserActuel = new Object();
Template.loginCustom.events({
    'click #googlebtn': function (event) {
        event.preventDefault();
        var emailVar = $('#loginEmail').val();
        var passwordVar = $('#loginPassword').val();
        connectProfil("google", emailVar, passwordVar);
    },
    'click #jobdaybtn': function (event) {
        //alert("jobdayAPI");
        event.preventDefault();
        var emailVar = $('#loginEmail').val();
        var passwordVar = $('#loginPassword').val();
        connectProfil("jobday", emailVar, passwordVar);
        //$('#myModal').modal({ show: false});
        //$('#myModal').on('hidden.bs.modal', function () {Router.go('/mainTemplate');}).modal('hide');

    },
    'click #linkedInbtn': function (event) {
        //alert("linkedInAPI");
        event.preventDefault();
        var emailVar = $('#loginEmail').val();
        var passwordVar = $('#loginPassword').val();
        connectProfil("linkedIn", emailVar, passwordVar);

    },
    'click #facebook-login': function (event) {
        //alert("facebookAPI");
        event.preventDefault();
        var emailVar = $('#loginEmail').val();
        var passwordVar = $('#loginPassword').val();
       // connectProfil("facebook", emailVar, passwordVar);
        Meteor.loginWithFacebook({}, function(err){
            if (err) {
                throw new Meteor.Error("Facebook login failed");
            }else{
                
                                    $('#myModal').on('hidden.bs.modal', function () {
                                        Router.go('/profiluser');
                                   }).modal('hide');
                
            }
        });
    }
});



function statusChangeCallback(response) {
    //console.log('statusChangeCallback');
    //console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
        // Logged into your app and Facebook.
        testAPI();

    } else if (response.status === 'not_authorized') {
        // The person is logged into Facebook, but not your app.
        document.getElementById('status').innerHTML = 'Please log ' +
            'into this app.';
        Router.go('/');
    } else {
        // The person is not logged into Facebook, so we're not sure if
        // they are logged into this app or not.
        document.getElementById('status').innerHTML = 'Please log ' +
            'into Facebook.';

    }
}

// This function is called when someone finishes with the Login
// Button.  See the onlogin handler attached to it in the sample
// code below.
function checkLoginState2() {

    FB.login(function (response) { //console.log('statusChangeCallback');
        //console.log(response);
        // The response object is returned with a status field that lets the
        // app know the current login status of the person.
        // Full docs on the response object can be found in the documentation
        // for FB.getLoginStatus().
        if (response.status === 'connected') {
            // Logged into your app and Facebook.
            testAPI();

        } else if (response.status === 'not_authorized') {
            // The person is logged into Facebook, but not your app.
            document.getElementById('status').innerHTML = 'Please log ' +
                'into this app.';
        } else {
            // The person is not logged into Facebook, so we're not sure if
            // they are logged into this app or not.
            document.getElementById('status').innerHTML = 'Please log ' +
                'into Facebook.';
        }
    });

    FB.getLoginStatus(function (response) {
        statusChangeCallback(response);
    });

}

window.fbAsyncInit = function () {
    FB.init({
        appId: '1081613621860903',
        cookie: true, // enable cookies to allow the server to access 
        // the session
        xfbml: true, // parse social plugins on this page
        version: 'v2.5', // use graph api version 2.5
        apiKey: 'CAACEdEose0cBACfZAxXndaHERQZBY3UWQlcNIgpluyyp6PNs7zF6ZC0wsbeeIgpchUqcUmQV02y9E32Miy5RxL1XGPlbs3VbdSG6ojFBOE0TF4ed1dOz0WWZAxrWgv3558hrhBg0Sdi4z9jjOyssuVAW9VHkL5iq9lZBROiASMxqaGd0OGCMLz4wiU5ZBZAnG7yGr2R66o8PpsYAX5t8a60'
    });




};

// Load the SDK asynchronously
(function (d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s);
    js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));

// Here we run a very simple test of the Graph API after login is
// successful.  See statusChangeCallback() for when this call is made.
function deconnect() {



    FB.logout(function (response) {});
};

function connectProfil(boutonPress, login, password) {

    switch (boutonPress) {
    case 1:

        FB.login(function (response) {
                    if (response.status === 'connected') {
                        // Logged into your app and Facebook.
                        FB.api('/me', 'GET', {
                                "fields": "id,last_name,birthday,age_range,context,currency,devices,education,email,first_name,gender,hometown,interested_in"
                            },
                            function (response) {
                          //      console.log(response);

                 //               if (Meteor.users.find({"facebook_id", response.id})) {




  //                              } else {
//
  //                                  Accounts.createUser({
    ////                                        email: response.email,
        //                                    password: makeid(),
          //                                  facebook: response.id
            //                            }, function (err) {
              //                              if (err) {
                //                                alert(err.reason)
                  //                          } else {
//
  //                                              var UserActuel = new Object();
    //                                            UserActuel.id = Meteor.UserId();
      //                                          UserActuel.Nom = response.last_name;
        //                                        UserActuel.Prenom = response.first_name;
          //                                      UserActuel.birthday = response.birthday;
            //                                    UserActuel.devices = response.devices;
              //                                  UserActuel.education = response.education;
                //                                UserActuel.email = response.email;
                  //                              UserActuel.gender = response.gender;
                    //                            UserActuel.hometown = response.hometown;
                      //                          UserActuel.languages = response.languages;
                        //                        UserActuel.locale = response.locale;
                          //                      UserActuel.location = response.location;
                            //                    UserActuel.urlPhoto1 = "http://graph.facebook.com/" + response.id + "/picture";
                              //                  Utilisateur.insert(UserActuel);
                                //                Meteor.loginWithPassword(response.email, password);
                                  //          }

//
  //                                      }
//
//
////
//
  //                                  );
//
  //                                  $('#myModal').on('hidden.bs.modal', function () {
    //                                    Router.go('/profiluser');
      //                              }).modal('hide');

//
  //                              }}



                             //   } else if (response.status === 'not_authorized') {
                                    // The person is logged into Facebook, but not your app.
                            //        document.getElementById('status').innerHTML = 'Please log ' +
                            //            'into this app.';
                            //        Router.go('/');
                            //    } else {
                                    // The person is not logged into Facebook, so we're not sure if
                                    // they are logged into this app or not.
                            //        document.getElementById('status').innerHTML = 'Please log ' +
                            //            'into Facebook.';
                            //        Router.go('/');
                              //  }

                            //    Router.go('/');

                            
                        });
                        
                        }
            
        });



                          


                        break;
                    case 2:
                        text = "Today is Sunday";
                        break;
                    default:




                        Meteor.loginWithPassword(emailVar, passwordVar, function err(err) {
                            if (err) {
                                console.log(err);
                                Accounts.createUser({
                                    email: emailVar,
                                    password: passwordVar
                                }, function err(err) {
                                    console.log("foutus id undifined pas error" + err);
                                    Router.go('/profiluser');
                                    //Router.go('/mainTemplate');
                                    $('#myModal').on('hidden.bs.modal', function () {

                                    }).modal('hide');
                                });

                                alert("Votre compte est crée mais incomplet ");
                            } else {
                                //Router.go('/mainTemplate');
                                Router.go('/profiluser');
                                $('#myModal').on('hidden.bs.modal', function () {

                                }).modal('hide');
                            }

                        });



                    }
                }

                function makeid() {
                    var text = "";
                    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

                    for (var i = 0; i < 5; i++)
                        text += possible.charAt(Math.floor(Math.random() * possible.length));

                    return text;
                }

                function testAPI() {



                    FB.api(
                        '/me',
                        'GET', {
                            "fields": "id,last_name,birthday,age_range,context,currency,devices,education,email,first_name,gender,hometown,interested_in"

                        },
                        function (response) {
                            console.log(response); // Insert your code here
                            //document.getElementById('status').innerHTML =                'Thanks for logging in, ' + response.name + '!';





                            this.UserActuel.id = response.id;
                            this.UserActuel.Nom = response.last_name;
                            this.UserActuel.Prenom = response.first_name;
                            this.UserActuel.birthday = response.birthday;
                            this.UserActuel.devices = response.devices;
                            this.UserActuel.education = response.education;
                            this.UserActuel.email = response.email;
                            this.this.UserActuel.gender = response.gender;
                            this.UserActuel.hometown = response.hometown;
                            this.UserActuel.languages = response.languages;
                            this.UserActuel.locale = response.locale;
                            this.UserActuel.location = response.location;
                            this.UserActuel.urlPhoto1 = "http://graph.facebook.com/" + response.id + "/picture";






                        }




                    );

                    FB.api("/me/picture?width=180&height=180", function (response) {
                        this.UserActuel.urlPhoto1 = response.data.url;
                        console.log(response.data.url);

                    });
                    Session.set("UserProfil", this.UserActuel);

                    $('#myModal').on('hidden.bs.modal', function () {
                        console.log("valid");
                        console.log(Session.get("UserProfil"));
                        Router.go('/profiluser');
                    }).modal('hide');




                }
                Template.loginCustom.helpers({

                }); displayProfiles = function (profiles) {
                    if (profiles != undefined) {
                        member = profiles.values[0];
                        document.getElementById("profiles").innerHTML =
                            "<p id=\"" + member.id + "\">Hello " + member.firstName + " " + member.lastName + " " + member.industry + "</p>";


                        //  var UserActuel = new Object();
                        UserActuel.id = member.id;
                        UserActuel.Nom = member.lastName;
                        UserActuel.Prenom = member.firstName;


                        // Session.set("UserProfil", UserActuel);
                        Router.go('/profiluser');
                        $('#myModal').on('hidden.bs.modal', function () {}).modal('hide');
                    } else {
                        Router.go('/');
                    }

                }
                Template.loginCustom.rendered = function () { // Template.thirdTemplate.created - also worked.
                    $('body').attr({
                        // onload: 'displayProfiles();'
                    });
                }