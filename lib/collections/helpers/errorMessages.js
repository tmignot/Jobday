SimpleSchema.messages({
	required: "[label] est requis",
	minString: "[label] doit faire au moins [min] caracteres",
	maxString: "[label] ne doit pas depasser [max] caracteres",
	minNumber: "[label] doit etre superieur ou egal a [min]",
	maxNumber: "[label] ne doit pas depasser [max]",
	minDate: "[label] doit etre posterieure au [min]",
	maxDate: "[label] doit etre anterieure au [max]",
	badDate: "[label] n'est pas un format de date valide",
	minCount: "Il doit y avoir au moins [minCount] valeurs",
	maxCount: "Le nombre de valeurs ne doit pas depasser [maxCount]",
	noDecimal: "[label] doit etre un entier",
	notAllowed: "[value] n'est pas une valeur autorisee",
	expectedString: "[label] doit etre une chaine de caractere",
	expectedNumber: "[label] doit etre un nombre",
	expectedBoolean: "[label] ne peut etre qu'une valeur booleene",
	expectedArray: "[label] doit etre un tableau",
	expectedObject: "[label] doit etre un objet",
	expectedConstructor: "[label] doit etre un [type]",
	regEx: [
		{msg: "[label] failed regular expression validation"},
		{exp: SimpleSchema.RegEx.Email, msg: "[label] doit etre une adresse e-mail valide"},
		{exp: SimpleSchema.RegEx.WeakEmail, msg: "[label] doit etre une adresse e-mail valide"},
		{exp: SimpleSchema.RegEx.Domain, msg: "[label] doit etre un nom de domaine valide"},
		{exp: SimpleSchema.RegEx.WeakDomain, msg: "[label] doit etre un nom de domaine valide"},
		{exp: SimpleSchema.RegEx.IP, msg: "[label] must be a valid IPv4 or IPv6 address"},
		{exp: SimpleSchema.RegEx.IPv4, msg: "[label] must be a valid IPv4 address"},
		{exp: SimpleSchema.RegEx.IPv6, msg: "[label] must be a valid IPv6 address"},
		{exp: SimpleSchema.RegEx.Url, msg: "[label] doit etre une URL valide"},
		{exp: SimpleSchema.RegEx.Id, msg: "[label] doit etre un ID valide"}
	],
	keyNotInSchema: "[key] n'est pas reconnue"
});
